#!/bin/sh

GOGC="${GOGC:-off}"
GOMAXPROCS="${GOMAXPROCS:-8}"
IDLETHRESHOLD="${IDLETHRESHOLD:-$(( $GOMAXPROCS / 2))}"

log() {
	printf "=== %s - %s\n" "$(date)" "$1"
}

cleanup() {
	if [ ! -z "$PID" ]; then
		kill "$PID"
	fi

	if [ -e "$FIFO" ]; then
		rm "$FIFO"
	fi

	exit 0
}

PID=""
spawnbin() {
	if ! ps -p "$PID" 2> /dev/null > /dev/null; then
		"$1" &
		PID=$!
		log "Starting new instance $PID"
	fi
}

poll() {
	if [ -z "$PID" ]; then
		return
	fi

	sleep 5
	if [ -z "$KILLIDLE" ]; then
		return
	fi

	local busycount=0

	ps -uH -p "$PID" > "$FIFO" &
	while read _ _ cpu _; do
		if [ "$cpu" == "%CPU" ]; then
			continue
		fi

		if [ "${cpu%%\.*}" -gt 5 ]; then
			busycount="$(( $busycount + 1 ))"
		fi
	done < "$FIFO"

	if [ "$busycount" -lt "$IDLETHRESHOLD" ]; then
		log "Killing wedged $PID"
		kill "$PID"
		return
	fi
}

FIFO=""
main() {
	local bin="$1"

	FIFO="$(mktemp -u)"

	echo "Running with: "
	echo "  GOGC: $GOGC"
	echo "  GOMAXPROCS: $GOMAXPROCS"
	echo "  KILLIDLE: $KILLIDLE"
	echo "  IDLETHRESHOLD: $IDLETHRESHOLD"
	echo

	mkfifo "$FIFO"
	trap cleanup SIGQUIT
	trap cleanup SIGINT
	while spawnbin "$bin"; do
		poll
	done
}

main "$@"
